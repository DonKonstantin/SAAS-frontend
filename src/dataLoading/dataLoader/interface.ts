/**
 * Интерфейс сервиса для загрузки данных
 *
 * Основное предназначение: загрузить наборы данных, необходимых для отображения страницы.
 * Может по сути вызываться в getServerSideProps страниц.
 *
 * Логика работы:
 * 1) Происходит формирование приоритезированных списков всех загрузчиков на основе приоритета загрузчика (метод)
 * 2) Приоритеты сортируются от минимального к максимальному
 * 3) Группы, отсортированные по приоритету загружаются последовательно, при этом загрузчики внутри групп
 *    загружаются параллельно
 * 4) Для всех загрузчиков результаты объединяются в единый итоговый результат
 *
 * Результат работы: Данные, возвращенные загрузчиками - складываются
 */
export interface DataLoaderInterface<P extends { [key: string]: any } = { [key: string]: any }> {
    /**
     * Загрузка данных для страниц
     * @param baseParameters
     */
    LoadData(baseParameters: P): Promise<P>
}

// Тип, описывающий callback базовой загрузки данных
export type LoadingCallback<P extends { [key: string]: any } = { [key: string]: any }> = (baseParameters: P) => Promise<P>