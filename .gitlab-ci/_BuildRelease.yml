stages:
  - build
  - build_notify

# Инициализация Werf
.werf_init: &werf_init
  image: docker:20.10.8
  services:
    - docker:20.10.8-dind
  variables:
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375/
  before_script:
    - echo $CI_PIPELINE_SOURCE
    - echo $IS_BUILD_ALLOWED
    - docker info
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    - apk update
    - apk add curl git
    - export PATH=$PATH:$HOME/bin
    - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
    - mkdir -p ~/bin
    - cd ~/bin
    - curl -L https://raw.githubusercontent.com/werf/multiwerf/master/get.sh | sh
    - type multiwerf && . $(multiwerf use 1.1 stable --as-file)
    - type werf && source $(werf ci-env gitlab --as-file)
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl version --client
    - cd $CI_PROJECT_DIR

# Базовый скрипт отправки уведомления о сборке
.build_notify: &build_notify
  stage: build_notify
  script:
    - apk update
    - apk add curl git
    - sh .gitlab-ci/scripts/BuildNotify.sh $TYPE $TEXT

# Скрипт отправки нотификации об успешной сборке
.build_success: &build_success
  <<: *build_notify
  variables:
    TYPE: "✅"
    TEXT: "Success"

# Скрипт отправки нотификации об упавшей сборке
.build_failed: &build_failed
  <<: *build_notify
  variables:
    TYPE: "❌"
    TEXT: "Failed"

# Сборка приложения
Build:
  extends: .werf_init
  stage: build
  environment:
    name: $ENVIRONMENT
  script:
    - echo $IS_BUILD_ALLOWED
    - werf build-and-publish


# Уведомление об успешной сборке
Build notify success:
  <<: *build_success
  environment:
    name: $ENVIRONMENT
  when: on_success

# Уведомление об отвале сборке
Build notify failed:
  <<: *build_failed
  environment:
    name: $ENVIRONMENT
  when: on_failure
